version: '3'

vars:
  PASSWORD_STORE_HCLOUD_PATH: Personal/development-hetzner/token-staging
  PASSWORD_STORE_LETS_ENCRYPT_EMAIL_PATH: kubernetes-staging/kubernetes-lets-encrypt-email/password
  PASSWORD_STORE_DOPPLER_PATH: Personal/development-doppler-personal-token/password
  PASSWORD_STORE_GITHUB_PAT_PATH: Personal/development-github.com/macos-pat
  PASSWORD_STORE_GITHUB_OWNER_PATH: Personal/development-github.com/username
  PASSWORD_STORE_CLOUDFLARE_TOKEN_PATH: Personal/development-cloudflare/global-api-key
  PASSWORD_STORE_CLOUDFLARE_EMAIL_PATH: Personal/development-cloudflare/username
  CLUSTER_NAME:
    sh: if [ -n "$ENVIRONMENT" ]; then echo "$ENVIRONMENT" ; else exit 1 ; fi

tasks:
  destroy:
    cmds:
      - for ks in $(kubectl get kustomization --no-headers -o custom-columns=":metadata.name" -n flux-system); do flux suspend kustomization $ks ; done
      - for: ["domain", "robusta"]
        cmd: kubectl delete kustomization {{ .ITEM }} -n flux-system
  apply-infra:
    env:
      TF_VAR_environment:
        sh: printf {{.CLUSTER_NAME}}
      TF_VAR_lets_encrypt_email:
        sh: op read --no-newline op://{{.PASSWORD_STORE_LETS_ENCRYPT_EMAIL_PATH}}
      TF_VAR_hcloud_token:
        sh: op read --no-newline op://{{.PASSWORD_STORE_HCLOUD_PATH}}
      TF_VAR_github_owner:
        sh: op read --no-newline op://{{.PASSWORD_STORE_GITHUB_OWNER_PATH}}
      TF_VAR_github_token:
        sh: op read --no-newline op://{{.PASSWORD_STORE_GITHUB_PAT_PATH}}
      TF_VAR_doppler_token:
        sh: op read --no-newline op://{{.PASSWORD_STORE_DOPPLER_PATH}}
      TF_VAR_cloudflare_api_token:
        sh: op read --no-newline op://{{.PASSWORD_STORE_CLOUDFLARE_TOKEN_PATH}}
      TF_VAR_cloudflare_email:
        sh: op read --no-newline op://{{.PASSWORD_STORE_CLOUDFLARE_EMAIL_PATH}}
    cmds:
      - cd provision && terraform apply
  destroy-infra:
    env:
      TF_VAR_environment:
        sh: printf {{.CLUSTER_NAME}}
      TF_VAR_lets_encrypt_email:
        sh: op read --no-newline op://{{.PASSWORD_STORE_LETS_ENCRYPT_EMAIL_PATH}}
      TF_VAR_hcloud_token:
        sh: op read --no-newline op://{{.PASSWORD_STORE_HCLOUD_PATH}}
      TF_VAR_github_owner:
        sh: op read --no-newline op://{{.PASSWORD_STORE_GITHUB_OWNER_PATH}}
      TF_VAR_github_token:
        sh: op read --no-newline op://{{.PASSWORD_STORE_GITHUB_PAT_PATH}}
      TF_VAR_cloudflare_api_token:
        sh: op read --no-newline op://{{.PASSWORD_STORE_CLOUDFLARE_TOKEN_PATH}}
      TF_VAR_cloudflare_email:
        sh: op read --no-newline op://{{.PASSWORD_STORE_CLOUDFLARE_EMAIL_PATH}}
    cmds:
      - cd provision && terraform state rm 'module.kubernetes.talos_machine_configuration_apply.worker'
      - cd provision && terraform state rm 'module.kubernetes.talos_machine_configuration_apply.control_plane'
      - cd provision && terraform state rm 'module.kubernetes.talos_machine_secrets.this'
      - cd provision && terraform destroy
  kubeconfig:
    env:
      TF_VAR_environment:
        sh: printf {{.CLUSTER_NAME}}
      TF_VAR_lets_encrypt_email:
        sh: op read --no-newline op://{{.PASSWORD_STORE_LETS_ENCRYPT_EMAIL_PATH}}
      TF_VAR_hcloud_token:
        sh: op read --no-newline op://{{.PASSWORD_STORE_HCLOUD_PATH}}
    cmds:
      - cd cluster && terraform output --raw kubeconfig > ~/.kube./config-{{.CLUSTER_NAME}}